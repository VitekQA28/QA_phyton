{"name": "test_select_1_row", "status": "broken", "statusDetails": {"message": "sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"dpg-cj94hf0eba7s73bdki80-a.oregon-postgres.render.com\" (35.227.164.209), port 5432 failed: SSL connection has been closed unexpectedly\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)", "trace": "self = <sqlalchemy.engine.base.Connection object at 0x000002B870F1FA10>\nengine = Engine(postgresql://x_clients_db_r06g_user:***@dpg-cj94hf0eba7s73bdki80-a.oregon-postgres.render.com/x_clients_db_r06g), connection = None, _has_events = None, _allow_revalidate = True\n_allow_autobegin = True\n\n    def __init__(\n        self,\n        engine: Engine,\n        connection: Optional[PoolProxiedConnection] = None,\n        _has_events: Optional[bool] = None,\n        _allow_revalidate: bool = True,\n        _allow_autobegin: bool = True,\n    ):\n        \"\"\"Construct a new Connection.\"\"\"\n        self.engine = engine\n        self.dialect = dialect = engine.dialect\n    \n        if connection is None:\n            try:\n>               self._dbapi_connection = engine.raw_connection()\n\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\engine\\base.py:145: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\engine\\base.py:3288: in raw_connection\n    return self.pool.connect()\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\pool\\base.py:452: in connect\n    return _ConnectionFairy._checkout(self)\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\pool\\base.py:1267: in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\pool\\base.py:716: in checkout\n    rec = pool._do_get()\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\pool\\impl.py:169: in _do_get\n    with util.safe_reraise():\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\util\\langhelpers.py:147: in __exit__\n    raise exc_value.with_traceback(exc_tb)\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\pool\\impl.py:167: in _do_get\n    return self._create_connection()\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\pool\\base.py:393: in _create_connection\n    return _ConnectionRecord(self)\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\pool\\base.py:678: in __init__\n    self.__connect()\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\pool\\base.py:902: in __connect\n    with util.safe_reraise():\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\util\\langhelpers.py:147: in __exit__\n    raise exc_value.with_traceback(exc_tb)\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\pool\\base.py:898: in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\engine\\create.py:637: in connect\n    return dialect.connect(*cargs, **cparams)\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\engine\\default.py:615: in connect\n    return self.loaded_dbapi.connect(*cargs, **cparams)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndsn = 'host=dpg-cj94hf0eba7s73bdki80-a.oregon-postgres.render.com dbname=x_clients_db_r06g user=x_clients_db_r06g_user password=0R1RNWXMepS7mrvcKRThRi82GtJ2Ob58', connection_factory = None\ncursor_factory = None\nkwargs = {'dbname': 'x_clients_db_r06g', 'host': 'dpg-cj94hf0eba7s73bdki80-a.oregon-postgres.render.com', 'password': '0R1RNWXMepS7mrvcKRThRi82GtJ2Ob58', 'user': 'x_clients_db_r06g_user'}\nkwasync = {}\n\n    def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n        \"\"\"\n        Create a new database connection.\n    \n        The connection parameters can be specified as a string:\n    \n            conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n    \n        or using a set of keyword arguments:\n    \n            conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n    \n        Or as a mix of both. The basic connection parameters are:\n    \n        - *dbname*: the database name\n        - *database*: the database name (only as keyword argument)\n        - *user*: user name used to authenticate\n        - *password*: password used to authenticate\n        - *host*: database host address (defaults to UNIX socket if not provided)\n        - *port*: connection port number (defaults to 5432 if not provided)\n    \n        Using the *connection_factory* parameter a different class or connections\n        factory can be specified. It should be a callable object taking a dsn\n        argument.\n    \n        Using the *cursor_factory* parameter, a new default cursor factory will be\n        used by cursor().\n    \n        Using *async*=True an asynchronous connection will be created. *async_* is\n        a valid alias (for Python versions where ``async`` is a keyword).\n    \n        Any other keyword parameter will be passed to the underlying client\n        library: the list of supported parameters depends on the library version.\n    \n        \"\"\"\n        kwasync = {}\n        if 'async' in kwargs:\n            kwasync['async'] = kwargs.pop('async')\n        if 'async_' in kwargs:\n            kwasync['async_'] = kwargs.pop('async_')\n    \n        dsn = _ext.make_dsn(dsn, **kwargs)\n>       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\nE       psycopg2.OperationalError: connection to server at \"dpg-cj94hf0eba7s73bdki80-a.oregon-postgres.render.com\" (35.227.164.209), port 5432 failed: SSL connection has been closed unexpectedly\n\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\psycopg2\\__init__.py:122: OperationalError\n\nThe above exception was the direct cause of the following exception:\n\n    def test_select_1_row():\n        db = create_engine(db_connection_string)\n        with db.connect() as conn:\n>           company_id = test_insert()\n\ntest_database.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest_database.py:31: in test_insert\n    session.commit()\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\orm\\session.py:1923: in commit\n    trans.commit(_to_root=True)\n<string>:2: in commit\n    ???\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\orm\\state_changes.py:139: in _go\n    ret_value = fn(self, *arg, **kw)\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\orm\\session.py:1239: in commit\n    self._prepare_impl()\n<string>:2: in _prepare_impl\n    ???\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\orm\\state_changes.py:139: in _go\n    ret_value = fn(self, *arg, **kw)\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\orm\\session.py:1214: in _prepare_impl\n    self.session.flush()\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\orm\\session.py:4179: in flush\n    self._flush(objects)\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\orm\\session.py:4314: in _flush\n    with util.safe_reraise():\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\util\\langhelpers.py:147: in __exit__\n    raise exc_value.with_traceback(exc_tb)\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\orm\\session.py:4275: in _flush\n    flush_context.execute()\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\orm\\unitofwork.py:466: in execute\n    rec.execute(self)\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\orm\\unitofwork.py:642: in execute\n    util.preloaded.orm_persistence.save_obj(\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\orm\\persistence.py:60: in save_obj\n    for (\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\orm\\persistence.py:221: in _organize_states_for_save\n    for state, dict_, mapper, connection in _connections_for_states(\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\orm\\persistence.py:1726: in _connections_for_states\n    connection = uowtransaction.transaction.connection(base_mapper)\n<string>:2: in connection\n    ???\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\orm\\state_changes.py:139: in _go\n    ret_value = fn(self, *arg, **kw)\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\orm\\session.py:978: in connection\n    return self._connection_for_bind(bind, execution_options)\n<string>:2: in _connection_for_bind\n    ???\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\orm\\state_changes.py:139: in _go\n    ret_value = fn(self, *arg, **kw)\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\orm\\session.py:1112: in _connection_for_bind\n    conn = self._parent._connection_for_bind(\n<string>:2: in _connection_for_bind\n    ???\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\orm\\state_changes.py:139: in _go\n    ret_value = fn(self, *arg, **kw)\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\orm\\session.py:1126: in _connection_for_bind\n    conn = bind.connect()\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\engine\\base.py:3264: in connect\n    return self._connection_cls(self)\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\engine\\base.py:147: in __init__\n    Connection._handle_dbapi_exception_noconnection(\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\engine\\base.py:2426: in _handle_dbapi_exception_noconnection\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\engine\\base.py:145: in __init__\n    self._dbapi_connection = engine.raw_connection()\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\engine\\base.py:3288: in raw_connection\n    return self.pool.connect()\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\pool\\base.py:452: in connect\n    return _ConnectionFairy._checkout(self)\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\pool\\base.py:1267: in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\pool\\base.py:716: in checkout\n    rec = pool._do_get()\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\pool\\impl.py:169: in _do_get\n    with util.safe_reraise():\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\util\\langhelpers.py:147: in __exit__\n    raise exc_value.with_traceback(exc_tb)\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\pool\\impl.py:167: in _do_get\n    return self._create_connection()\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\pool\\base.py:393: in _create_connection\n    return _ConnectionRecord(self)\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\pool\\base.py:678: in __init__\n    self.__connect()\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\pool\\base.py:902: in __connect\n    with util.safe_reraise():\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\util\\langhelpers.py:147: in __exit__\n    raise exc_value.with_traceback(exc_tb)\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\pool\\base.py:898: in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\engine\\create.py:637: in connect\n    return dialect.connect(*cargs, **cparams)\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sqlalchemy\\engine\\default.py:615: in connect\n    return self.loaded_dbapi.connect(*cargs, **cparams)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndsn = 'host=dpg-cj94hf0eba7s73bdki80-a.oregon-postgres.render.com dbname=x_clients_db_r06g user=x_clients_db_r06g_user password=0R1RNWXMepS7mrvcKRThRi82GtJ2Ob58', connection_factory = None\ncursor_factory = None\nkwargs = {'dbname': 'x_clients_db_r06g', 'host': 'dpg-cj94hf0eba7s73bdki80-a.oregon-postgres.render.com', 'password': '0R1RNWXMepS7mrvcKRThRi82GtJ2Ob58', 'user': 'x_clients_db_r06g_user'}\nkwasync = {}\n\n    def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n        \"\"\"\n        Create a new database connection.\n    \n        The connection parameters can be specified as a string:\n    \n            conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n    \n        or using a set of keyword arguments:\n    \n            conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n    \n        Or as a mix of both. The basic connection parameters are:\n    \n        - *dbname*: the database name\n        - *database*: the database name (only as keyword argument)\n        - *user*: user name used to authenticate\n        - *password*: password used to authenticate\n        - *host*: database host address (defaults to UNIX socket if not provided)\n        - *port*: connection port number (defaults to 5432 if not provided)\n    \n        Using the *connection_factory* parameter a different class or connections\n        factory can be specified. It should be a callable object taking a dsn\n        argument.\n    \n        Using the *cursor_factory* parameter, a new default cursor factory will be\n        used by cursor().\n    \n        Using *async*=True an asynchronous connection will be created. *async_* is\n        a valid alias (for Python versions where ``async`` is a keyword).\n    \n        Any other keyword parameter will be passed to the underlying client\n        library: the list of supported parameters depends on the library version.\n    \n        \"\"\"\n        kwasync = {}\n        if 'async' in kwargs:\n            kwasync['async'] = kwargs.pop('async')\n        if 'async_' in kwargs:\n            kwasync['async_'] = kwargs.pop('async_')\n    \n        dsn = _ext.make_dsn(dsn, **kwargs)\n>       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\nE       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"dpg-cj94hf0eba7s73bdki80-a.oregon-postgres.render.com\" (35.227.164.209), port 5432 failed: SSL connection has been closed unexpectedly\nE       \nE       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n\n..\\..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\psycopg2\\__init__.py:122: OperationalError"}, "start": 1694419640301, "stop": 1694419644438, "uuid": "a24d163a-e6cc-42e8-ab7f-81321a380ed5", "historyId": "23ee77264585973c2a0063af0cf05017", "testCaseId": "23ee77264585973c2a0063af0cf05017", "fullName": "test_database#test_select_1_row", "labels": [{"name": "suite", "value": "test_database"}, {"name": "host", "value": "DESKTOP-3K3DNLR"}, {"name": "thread", "value": "11012-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_database"}]}